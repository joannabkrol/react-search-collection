[{"/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/containers/Search.js":"1","/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/index.js":"2","/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/reportWebVitals.js":"3","/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/App.js":"4"},{"size":3471,"mtime":1621866328263,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":1611836253503,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611836253504,"results":"8","hashOfConfig":"6"},{"size":157,"mtime":1611838846664,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"90c6hp",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/containers/Search.js",["19","20"],"/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/index.js",[],["21","22"],"/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/reportWebVitals.js",[],"/Users/joannakrol/Desktop/joanna-workspace/react-search-collection/src/App.js",[],{"ruleId":"23","severity":1,"message":"24","line":14,"column":16,"nodeType":"25","messageId":"26","endLine":14,"endColumn":23},{"ruleId":"27","severity":1,"message":"28","line":26,"column":16,"nodeType":"29","endLine":26,"endColumn":42},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},"no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'source' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-global-assign","no-unsafe-negation"]